package cz.smartfine.pc.view;

import cz.smartfine.networklayer.model.pc.PINChangeFailReason;
import cz.smartfine.pc.SFPCClient;
import cz.smartfine.pc.networklayer.business.listeners.IPinProtocolListener;
import cz.smartfine.pc.networklayer.dataprotocols.PinProtocol;
import cz.smartfine.pc.preferences.PCClientPreferences;
import cz.smartfine.pc.view.util.UIValidator;
import javax.swing.JOptionPane;

/**
 * Panel pro změnu PINu.
 *
 * @author Pavel Brož
 */
public class ChangePinPanel extends javax.swing.JPanel implements IPinProtocolListener {

    /**
     * Poslední zadané služební číslo pro zapamatování.
     */
    private int lastBadgeNumber;
    /**
     * Poslední zadaný PIN pro zapamatování.
     */
    private int lastPIN;
    /**
     * Číslo pokusu o připojení k serveru.
     */
    private int attemptNumber = 0;
    /**
     * Při výpadku spojení budou uskutečněny 3 pokusy o spojení.
     */
    private final int MAX_CON_ATTEMPTS = 3;
    /**
     * Proměnná říká, zda-li už došlo ke změně pinu.
     */
    private boolean pinChanged = false;
    /**
     * Protokol pro změnu PINu.
     */
    private PinProtocol pinProtocol;

    //================================================== KONSTRUKTORY & DESTRUKTORY ==================================================//
    /**
     * Konstruktor.
     */
    public ChangePinPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtBadgeNumber = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        txtPin = new javax.swing.JPasswordField();
        butChangePin = new javax.swing.JButton();

        jLabel2.setText(SFPCClient.getApplication().getLocalization().getString("chngpinpanel.pinfield.text"));
        jLabel2.setToolTipText("");

        try {
            txtBadgeNumber.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel1.setText(SFPCClient.getApplication().getLocalization().getString("chngpinpanel.badgenumberfield.text"));
        jLabel1.setToolTipText("");

        butChangePin.setText(SFPCClient.getApplication().getLocalization().getString("chngpinpanel.chngpinbutton.text"));
        butChangePin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butChangePinActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(butChangePin)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPin, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBadgeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBadgeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butChangePin)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    //================================================== UI HANDLERY ==================================================//
    /**
     * Změní PIN.
     *
     * @param evt
     */
    private void butChangePinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butChangePinActionPerformed
        if (!UIValidator.checkLoginFormat(txtBadgeNumber.getText(), txtPin.getPassword())) {
            JOptionPane.showMessageDialog(this, SFPCClient.getApplication().getLocalization().getString("exception.chngpinpanel.loginformat.msg"),
                    SFPCClient.getApplication().getLocalization().getString("exception.chngpinpanel.loginformat.title"), JOptionPane.WARNING_MESSAGE);
        } else {
            //zapamatování údajů//
            lastBadgeNumber = Integer.parseInt(txtBadgeNumber.getText());
            lastPIN = Integer.parseInt(new String(txtPin.getPassword()));
            txtPin.setText(""); //odstranění PINu z pole

            changePin(lastBadgeNumber, lastPIN); //změní pin
        }
    }//GEN-LAST:event_butChangePinActionPerformed
    //================================================== UI PRVKY ==================================================//
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butChangePin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JFormattedTextField txtBadgeNumber;
    private javax.swing.JPasswordField txtPin;
    // End of variables declaration//GEN-END:variables

    //================================================== PRIVÁTNÍ METODY ==================================================//
    /**
     * Provede změnu PINu
     *
     * @param badgeNumber Služební číslo.
     * @param pin Současný PIN.
     */
    private void changePin(int badgeNumber, int pin) {
        pinProtocol = new PinProtocol(SFPCClient.getApplication().getConnectionProvider().getNetworkInterface(), this);
        attemptNumber++;
        pinProtocol.changePin(badgeNumber, pin);
    }

    //================================================== HANDLERY PROTOKOLŮ ==================================================//
    @Override
    public void onConnectionTerminated() {
        if (!pinChanged) { //pin ještě nebyl změněn
            if (attemptNumber < MAX_CON_ATTEMPTS) { //ještě jsou pokusy
                javax.swing.SwingUtilities.invokeLater(new Runnable() {

                    @Override
                    public void run() {
                        changePin(lastBadgeNumber, lastPIN);
                    }
                });
            } else { //pokusy došly
                javax.swing.SwingUtilities.invokeLater(new Runnable() {

                    @Override
                    public void run() {
                        JOptionPane.showMessageDialog(null, SFPCClient.getApplication().getLocalization().getString("exception.chngpinpanel.createcon.msg"),
                                SFPCClient.getApplication().getLocalization().getString("exception.chngpinpanel.createcon.title"), JOptionPane.ERROR_MESSAGE);
                    }
                });
            }
        }
    }

    @Override
    public void onMessageSent() {
    }

    @Override
    public void onPinChanged(final int newPin) {
        javax.swing.SwingUtilities.invokeLater(new Runnable() {

            @Override
            public void run() {
                pinChanged = true; //poznámka, že pin už byl vygenerován (kvůli connection terminated)
                pinProtocol.disconnectProtocol(); //odpojení protokolu
                PCClientPreferences.setPin(newPin); //uložení nového pinu do nastavení

                JOptionPane.showMessageDialog(null, SFPCClient.getApplication().getLocalization().getString("chngpinpanel.pinchanged.msg") + String.valueOf(newPin),
                        SFPCClient.getApplication().getLocalization().getString("chngpinpanel.pinchanged.title"), JOptionPane.INFORMATION_MESSAGE);
            }
        });
    }

    @Override
    public void onPinChangeError(PINChangeFailReason reason) {
        switch (reason) {
            case UNKNOWN_REASON: //neznámý důvod
                //zavolání dialogu ve vlákně GUI//
                javax.swing.SwingUtilities.invokeLater(new Runnable() {

                    @Override
                    public void run() {
                        JOptionPane.showMessageDialog(null, SFPCClient.getApplication().getLocalization().getString("exception.chngpinpanel.chngpinerr.unknown.msg"),
                                SFPCClient.getApplication().getLocalization().getString("exception.chngpinpanel.chngpinerr.unknown.title"), JOptionPane.ERROR_MESSAGE);
                    }
                });
                break;
            case WRONG_BADGE_NUMBER_OR_PIN: //chybné služební číslo nebo pin
                //zavolání dialogu ve vlákně GUI//
                javax.swing.SwingUtilities.invokeLater(new Runnable() {

                    @Override
                    public void run() {
                        JOptionPane.showMessageDialog(null, SFPCClient.getApplication().getLocalization().getString("exception.chngpinpanel.chngpinerr.wrongbnorpin.msg"),
                                SFPCClient.getApplication().getLocalization().getString("exception.chngpinpanel.chngpinerr.wrongbnorpin.title"), JOptionPane.ERROR_MESSAGE);
                    }
                });
                break;
        }
    }
}
